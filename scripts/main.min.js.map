{"version":3,"sources":["main.min.js","main.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","init","storage","Storage","chart","ChartComponent","addDialog","AddDialog","showDialogButton","document","getElementById","addEventListener","show","clearButton","clear","drawChart","isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","this","_storage","_chart","_dialog","_initButtons","_initTemperatureInput","_initDateDialog","_initTimeDialog","_resetForm","value","classList","remove","add","_selectedDate","_selectedTime","moment","_dateLabel","textContent","format","_timeLabel","_temperature","_this","closeButton","_onClose","applyButton","_onApply","hide","temperature","_getTemperature","time","set","get","data","saveRecord","records","getRecords","_this2","dateDialog","mdDateTimePicker","type","dateButton","querySelector","toggle","trigger","_this3","timeDialog","timeButton","_key","localStorage","getItem","JSON","parse","record","push","setItem","stringify","removeItem","_ctx","map","item","y","x","sort","item1","item2","Chart","datasets","fill","cubicInterpolationMode","borderColor","pointBorderColor","options","legend","display","responsive","maintainAspectRatio","scales","xAxes","displayFormats","quarter","yAxes","ticks","max","min"],"mappings":"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","file":"main.min.js","sourcesContent":["'use strict';var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}} /* eslint-env browser */\n(function () {\n    'use strict';\n\n    // Check to make sure service workers are supported in the current browser,\n    // and that the current page is accessed from a secure origin. Using a\n    // service worker from an insecure origin will trigger JS console errors. See\n    // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n    var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\n\n\n    if ('serviceWorker' in navigator && (\n    window.location.protocol === 'https:' || isLocalhost)) {\n        navigator.serviceWorker.register('service-worker.js').\n        then(function (registration) {\n            // updatefound is fired if service-worker.js changes.\n            registration.onupdatefound = function () {\n                // updatefound is also fired the very first time the SW is installed,\n                // and there's no need to prompt for a reload at that point.\n                // So check here to see if the page is already controlled,\n                // i.e. whether there's an existing service worker.\n                if (navigator.serviceWorker.controller) {\n                    // The updatefound event implies that registration.installing is set:\n                    // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n                    var installingWorker = registration.installing;\n\n                    installingWorker.onstatechange = function () {\n                        switch (installingWorker.state) {\n                            case 'installed':\n                                // At this point, the old content will have been purged and the\n                                // fresh content will have been added to the cache.\n                                // It's the perfect time to display a \"New content is\n                                // available; please refresh.\" message in the page's interface.\n                                break;\n\n                            case 'redundant':\n                                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n                            default:\n                            // Ignore\n                        }\n                    };\n                }\n            };\n        }).catch(function (e) {\n            console.error('Error during service worker registration:', e);\n        });\n    }\n    /* eslint-disable */var\n\n    AddDialog = function () {\n\n        function AddDialog(storage, chart) {_classCallCheck(this, AddDialog);\n\n            this._storage = storage;\n            this._chart = chart;\n\n            this._dialog = document.getElementById('add-dialog');\n\n            this._initButtons();\n            this._initTemperatureInput();\n            this._initDateDialog();\n            this._initTimeDialog();\n\n            this._resetForm();\n        }_createClass(AddDialog, [{ key: 'show', value: function show()\n\n            {\n                this._dialog.classList.remove('hidden');\n                this._resetForm();\n            } }, { key: 'hide', value: function hide()\n\n            {\n                this._dialog.classList.add('hidden');\n                this._resetForm();\n            } }, { key: '_resetForm', value: function _resetForm()\n\n            {\n                this._selectedDate = this._selectedTime = moment();\n\n                this._dateLabel.textContent = this._selectedDate.format('DD.MM.YYYY');\n                this._timeLabel.textContent = this._selectedTime.format('h:mm');\n\n                this._temperature.value = 36.6;\n            } }, { key: '_initButtons', value: function _initButtons()\n\n            {var _this = this;\n                var closeButton = document.getElementById('close');\n                closeButton.addEventListener('click', function () {return _this._onClose();});\n\n                var applyButton = document.getElementById('apply');\n                applyButton.addEventListener('click', function () {return _this._onApply();});\n            } }, { key: '_onClose', value: function _onClose()\n\n            {\n                this.hide();\n            } }, { key: '_onApply', value: function _onApply()\n\n            {\n\n                var temperature = this._getTemperature();\n\n                if (!temperature)\n                return;\n\n                var time = moment().\n                set('year', this._selectedDate.get('year')).\n                set('month', this._selectedDate.get('month')).\n                set('date', this._selectedDate.get('date')).\n                set('hour', this._selectedTime.get('hour')).\n                set('minute', this._selectedTime.get('minute'));\n\n                var data = {\n                    temperature: temperature,\n                    time: time.format() };\n\n\n                this._storage.saveRecord(data);\n\n                var records = this._storage.getRecords();\n                this._chart.drawChart(records);\n\n                this.hide();\n            } }, { key: '_getTemperature', value: function _getTemperature()\n\n            {\n                return this._temperature.value;\n            } }, { key: '_initTemperatureInput', value: function _initTemperatureInput()\n\n            {\n                this._temperature = document.getElementById('temperature');\n            } }, { key: '_initDateDialog', value: function _initDateDialog()\n\n            {var _this2 = this;\n                var dateDialog = new mdDateTimePicker.default({ type: 'date' });\n                var dateButton = document.querySelector('#date button');\n                dateButton.addEventListener('click', function () {\n                    dateDialog.toggle();\n                });\n\n                this._dateLabel = document.querySelector('#date span');\n                dateDialog.trigger = this._dateLabel;\n\n                this._dateLabel.addEventListener('onOk', function () {\n                    _this2._dateLabel.textContent = dateDialog.time.format('DD.MM.YYYY');\n                    _this2._selectedDate = dateDialog.time;\n                });\n            } }, { key: '_initTimeDialog', value: function _initTimeDialog()\n\n            {var _this3 = this;\n                var timeDialog = new mdDateTimePicker.default({ type: 'time' });\n                var timeButton = document.querySelector('#time button');\n                timeButton.addEventListener('click', function () {\n                    timeDialog.toggle();\n                });\n\n                this._timeLabel = document.querySelector('#time span');\n                timeDialog.trigger = this._timeLabel;\n                this._timeLabel.addEventListener('onOk', function () {\n                    _this3._timeLabel.textContent = timeDialog.time.format('h:mm');\n                    _this3._selectedTime = timeDialog.time;\n                });\n            } }]);return AddDialog;}();var\n\n\n    Storage = function () {\n\n        function Storage() {_classCallCheck(this, Storage);\n            this._key = 'data';\n        }_createClass(Storage, [{ key: 'getRecords', value: function getRecords()\n\n            {\n                var data = window.localStorage.getItem(this._key);\n\n                var records = [];\n\n                if (data)\n                records = JSON.parse(data);\n\n                return records;\n            } }, { key: 'saveRecord', value: function saveRecord(\n\n            record) {\n                var records = this.getRecords();\n                records.push(record);\n\n                window.localStorage.setItem(this._key, JSON.stringify(records));\n            } }, { key: 'clear', value: function clear()\n\n            {\n                window.localStorage.removeItem(this._key);\n            } }]);return Storage;}();var\n\n\n    ChartComponent = function () {\n        function ChartComponent(storage) {_classCallCheck(this, ChartComponent);\n\n            this._ctx = document.getElementById('temperature-chart');\n            var records = storage.getRecords();\n            this.drawChart(records);\n        }_createClass(ChartComponent, [{ key: 'drawChart', value: function drawChart(\n\n            records) {\n\n                var data = records.\n                map(function (item) {\n                    return { y: item.temperature, x: item.time };\n                }).\n                sort(function (item1, item2) {\n                    if (item1.x > item2.x) return 1;\n                    if (item1.x < item2.x) return -1;\n                    return 0;\n                });\n\n                this._chart = new Chart(this._ctx, {\n                    type: 'line',\n                    data: {\n                        datasets: [{\n                            data: data,\n                            fill: false,\n                            cubicInterpolationMode: 'monotone',\n                            borderColor: 'rgb(255, 126, 70)',\n                            pointBorderColor: 'rgb(255,215,64)' }] },\n\n\n                    options: {\n                        legend: {\n                            display: false },\n\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                            xAxes: [{\n                                type: 'time',\n                                time: {\n                                    displayFormats: {\n                                        quarter: 'MMM YYYY hh:mm' } } }],\n\n\n\n                            yAxes: [{\n                                ticks: {\n                                    max: 42,\n                                    min: 35 } }] } } });\n\n\n\n\n\n            } }]);return ChartComponent;}();\n\n\n    init();\n\n    function init() {\n\n        var storage = new Storage();\n        var chart = new ChartComponent(storage);\n        var addDialog = new AddDialog(storage, chart);\n\n        var showDialogButton = document.getElementById('add');\n        showDialogButton.addEventListener('click', function () {\n            addDialog.show();\n        });\n\n        var clearButton = document.getElementById('clear-button');\n        clearButton.addEventListener('click', function () {\n            storage.clear();\n            chart.drawChart([]);\n        });\n    }\n\n    /* eslint-enable */\n})();\n//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiaXNMb2NhbGhvc3QiLCJCb29sZWFuIiwid2luZG93IiwibG9jYXRpb24iLCJob3N0bmFtZSIsIm1hdGNoIiwibmF2aWdhdG9yIiwicHJvdG9jb2wiLCJzZXJ2aWNlV29ya2VyIiwicmVnaXN0ZXIiLCJ0aGVuIiwicmVnaXN0cmF0aW9uIiwib251cGRhdGVmb3VuZCIsImNvbnRyb2xsZXIiLCJpbnN0YWxsaW5nV29ya2VyIiwiaW5zdGFsbGluZyIsIm9uc3RhdGVjaGFuZ2UiLCJzdGF0ZSIsIkVycm9yIiwiY2F0Y2giLCJlIiwiY29uc29sZSIsImVycm9yIiwiQWRkRGlhbG9nIiwic3RvcmFnZSIsImNoYXJ0IiwiX3N0b3JhZ2UiLCJfY2hhcnQiLCJfZGlhbG9nIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIl9pbml0QnV0dG9ucyIsIl9pbml0VGVtcGVyYXR1cmVJbnB1dCIsIl9pbml0RGF0ZURpYWxvZyIsIl9pbml0VGltZURpYWxvZyIsIl9yZXNldEZvcm0iLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJfc2VsZWN0ZWREYXRlIiwiX3NlbGVjdGVkVGltZSIsIm1vbWVudCIsIl9kYXRlTGFiZWwiLCJ0ZXh0Q29udGVudCIsImZvcm1hdCIsIl90aW1lTGFiZWwiLCJfdGVtcGVyYXR1cmUiLCJ2YWx1ZSIsImNsb3NlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9vbkNsb3NlIiwiYXBwbHlCdXR0b24iLCJfb25BcHBseSIsImhpZGUiLCJ0ZW1wZXJhdHVyZSIsIl9nZXRUZW1wZXJhdHVyZSIsInRpbWUiLCJzZXQiLCJnZXQiLCJkYXRhIiwic2F2ZVJlY29yZCIsInJlY29yZHMiLCJnZXRSZWNvcmRzIiwiZHJhd0NoYXJ0IiwiZGF0ZURpYWxvZyIsIm1kRGF0ZVRpbWVQaWNrZXIiLCJkZWZhdWx0IiwidHlwZSIsImRhdGVCdXR0b24iLCJxdWVyeVNlbGVjdG9yIiwidG9nZ2xlIiwidHJpZ2dlciIsInRpbWVEaWFsb2ciLCJ0aW1lQnV0dG9uIiwiU3RvcmFnZSIsIl9rZXkiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiSlNPTiIsInBhcnNlIiwicmVjb3JkIiwicHVzaCIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJyZW1vdmVJdGVtIiwiQ2hhcnRDb21wb25lbnQiLCJfY3R4IiwibWFwIiwieSIsIml0ZW0iLCJ4Iiwic29ydCIsIml0ZW0xIiwiaXRlbTIiLCJDaGFydCIsImRhdGFzZXRzIiwiZmlsbCIsImN1YmljSW50ZXJwb2xhdGlvbk1vZGUiLCJib3JkZXJDb2xvciIsInBvaW50Qm9yZGVyQ29sb3IiLCJvcHRpb25zIiwibGVnZW5kIiwiZGlzcGxheSIsInJlc3BvbnNpdmUiLCJtYWludGFpbkFzcGVjdFJhdGlvIiwic2NhbGVzIiwieEF4ZXMiLCJkaXNwbGF5Rm9ybWF0cyIsInF1YXJ0ZXIiLCJ5QXhlcyIsInRpY2tzIiwibWF4IiwibWluIiwiaW5pdCIsImFkZERpYWxvZyIsInNob3dEaWFsb2dCdXR0b24iLCJzaG93IiwiY2xlYXJCdXR0b24iLCJjbGVhciJdLCJtYXBwaW5ncyI6IndzQkFBQTtBQUNBLENBQUMsWUFBVztBQUNWOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBSUEsY0FBY0MsUUFBUUMsT0FBT0MsUUFBUCxDQUFnQkMsUUFBaEIsS0FBNkIsV0FBN0I7QUFDdEI7QUFDQUYsV0FBT0MsUUFBUCxDQUFnQkMsUUFBaEIsS0FBNkIsT0FGUDtBQUd0QjtBQUNBRixXQUFPQyxRQUFQLENBQWdCQyxRQUFoQixDQUF5QkMsS0FBekI7QUFDRSw0REFERixDQUpjLENBQWxCOzs7O0FBU0EsUUFBSSxtQkFBbUJDLFNBQW5CO0FBQ0NKLFdBQU9DLFFBQVAsQ0FBZ0JJLFFBQWhCLEtBQTZCLFFBQTdCLElBQXlDUCxXQUQxQyxDQUFKLEVBQzREO0FBQzFETSxrQkFBVUUsYUFBVixDQUF3QkMsUUFBeEIsQ0FBaUMsbUJBQWpDO0FBQ0NDLFlBREQsQ0FDTSxVQUFTQyxZQUFULEVBQXVCO0FBQzNC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QUFRO0FBQ0pDLHFDQUFTLEtBREwsRUFESDs7QUFJTEMsb0NBQVksSUFKUDtBQUtMQyw2Q0FBcUIsS0FMaEI7QUFNTEMsZ0NBQVE7QUFDSkMsbUNBQU8sQ0FBQztBQUNKdkMsc0NBQU0sTUFERjtBQUVKWCxzQ0FBTTtBQUNGbUQsb0RBQWdCO0FBQ1pDLGlEQUFTLGdCQURHLEVBRGQsRUFGRixFQUFELENBREg7Ozs7QUFTSkMsbUNBQU8sQ0FBQztBQUNKQyx1Q0FBTztBQUNIQyx5Q0FBSyxFQURGO0FBRUhDLHlDQUFLLEVBRkYsRUFESCxFQUFELENBVEgsRUFOSCxFQVhzQixFQUFyQixDQUFkOzs7Ozs7QUFtQ0gsYUEvUEc7OztBQWtRUkM7O0FBRUEsYUFBU0EsSUFBVCxHQUFnQjs7QUFFWixZQUFNekYsVUFBVSxJQUFJa0QsT0FBSixFQUFoQjtBQUNBLFlBQU1qRCxRQUFRLElBQUk0RCxjQUFKLENBQW1CN0QsT0FBbkIsQ0FBZDtBQUNBLFlBQU0wRixZQUFZLElBQUkzRixTQUFKLENBQWNDLE9BQWQsRUFBdUJDLEtBQXZCLENBQWxCOztBQUVBLFlBQU0wRixtQkFBbUJ0RixTQUFTQyxjQUFULENBQXdCLEtBQXhCLENBQXpCO0FBQ0FxRix5QkFBaUJsRSxnQkFBakIsQ0FBa0MsT0FBbEMsRUFBMkMsWUFBTTtBQUM3Q2lFLHNCQUFVRSxJQUFWO0FBQ0gsU0FGRDs7QUFJQSxZQUFNQyxjQUFjeEYsU0FBU0MsY0FBVCxDQUF3QixjQUF4QixDQUFwQjtBQUNBdUYsb0JBQVlwRSxnQkFBWixDQUE2QixPQUE3QixFQUFzQyxZQUFNO0FBQ3hDekIsb0JBQVE4RixLQUFSO0FBQ0E3RixrQkFBTXNDLFNBQU4sQ0FBZ0IsRUFBaEI7QUFDSCxTQUhEO0FBSUg7O0FBRUQ7QUFDSCxDQXZSRCIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWVudiBicm93c2VyICovXG4oZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBDaGVjayB0byBtYWtlIHN1cmUgc2VydmljZSB3b3JrZXJzIGFyZSBzdXBwb3J0ZWQgaW4gdGhlIGN1cnJlbnQgYnJvd3NlcixcbiAgLy8gYW5kIHRoYXQgdGhlIGN1cnJlbnQgcGFnZSBpcyBhY2Nlc3NlZCBmcm9tIGEgc2VjdXJlIG9yaWdpbi4gVXNpbmcgYVxuICAvLyBzZXJ2aWNlIHdvcmtlciBmcm9tIGFuIGluc2VjdXJlIG9yaWdpbiB3aWxsIHRyaWdnZXIgSlMgY29uc29sZSBlcnJvcnMuIFNlZVxuICAvLyBodHRwOi8vd3d3LmNocm9taXVtLm9yZy9Ib21lL2Nocm9taXVtLXNlY3VyaXR5L3ByZWZlci1zZWN1cmUtb3JpZ2lucy1mb3ItcG93ZXJmdWwtbmV3LWZlYXR1cmVzXG4gIHZhciBpc0xvY2FsaG9zdCA9IEJvb2xlYW4od2luZG93LmxvY2F0aW9uLmhvc3RuYW1lID09PSAnbG9jYWxob3N0JyB8fFxuICAgICAgLy8gWzo6MV0gaXMgdGhlIElQdjYgbG9jYWxob3N0IGFkZHJlc3MuXG4gICAgICB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUgPT09ICdbOjoxXScgfHxcbiAgICAgIC8vIDEyNy4wLjAuMS84IGlzIGNvbnNpZGVyZWQgbG9jYWxob3N0IGZvciBJUHY0LlxuICAgICAgd2luZG93LmxvY2F0aW9uLmhvc3RuYW1lLm1hdGNoKFxuICAgICAgICAvXjEyNyg/OlxcLig/OjI1WzAtNV18MlswLTRdWzAtOV18WzAxXT9bMC05XVswLTldPykpezN9JC9cbiAgICAgIClcbiAgICApO1xuXG4gIGlmICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yICYmXG4gICAgICAod2luZG93LmxvY2F0aW9uLnByb3RvY29sID09PSAnaHR0cHM6JyB8fCBpc0xvY2FsaG9zdCkpIHtcbiAgICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3Rlcignc2VydmljZS13b3JrZXIuanMnKVxuICAgIC50aGVuKGZ1bmN0aW9uKHJlZ2lzdHJhdGlvbikge1xuICAgICAgLy8gdXBkYXRlZm91bmQgaXMgZmlyZWQgaWYgc2VydmljZS13b3JrZXIuanMgY2hhbmdlcy5cbiAgICAgIHJlZ2lzdHJhdGlvbi5vbnVwZGF0ZWZvdW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vIHVwZGF0ZWZvdW5kIGlzIGFsc28gZmlyZWQgdGhlIHZlcnkgZmlyc3QgdGltZSB0aGUgU1cgaXMgaW5zdGFsbGVkLFxuICAgICAgICAvLyBhbmQgdGhlcmUncyBubyBuZWVkIHRvIHByb21wdCBmb3IgYSByZWxvYWQgYXQgdGhhdCBwb2ludC5cbiAgICAgICAgLy8gU28gY2hlY2sgaGVyZSB0byBzZWUgaWYgdGhlIHBhZ2UgaXMgYWxyZWFkeSBjb250cm9sbGVkLFxuICAgICAgICAvLyBpLmUuIHdoZXRoZXIgdGhlcmUncyBhbiBleGlzdGluZyBzZXJ2aWNlIHdvcmtlci5cbiAgICAgICAgaWYgKG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLmNvbnRyb2xsZXIpIHtcbiAgICAgICAgICAvLyBUaGUgdXBkYXRlZm91bmQgZXZlbnQgaW1wbGllcyB0aGF0IHJlZ2lzdHJhdGlvbi5pbnN0YWxsaW5nIGlzIHNldDpcbiAgICAgICAgICAvLyBodHRwczovL3NsaWdodGx5b2ZmLmdpdGh1Yi5pby9TZXJ2aWNlV29ya2VyL3NwZWMvc2VydmljZV93b3JrZXIvaW5kZXguaHRtbCNzZXJ2aWNlLXdvcmtlci1jb250YWluZXItdXBkYXRlZm91bmQtZXZlbnRcbiAgICAgICAgICB2YXIgaW5zdGFsbGluZ1dvcmtlciA9IHJlZ2lzdHJhdGlvbi5pbnN0YWxsaW5nO1xuXG4gICAgICAgICAgaW5zdGFsbGluZ1dvcmtlci5vbnN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKGluc3RhbGxpbmdXb3JrZXIuc3RhdGUpIHtcbiAgICAgICAgICAgICAgY2FzZSAnaW5zdGFsbGVkJzpcbiAgICAgICAgICAgICAgICAvLyBBdCB0aGlzIHBvaW50LCB0aGUgb2xkIGNvbnRlbnQgd2lsbCBoYXZlIGJlZW4gcHVyZ2VkIGFuZCB0aGVcbiAgICAgICAgICAgICAgICAvLyBmcmVzaCBjb250ZW50IHdpbGwgaGF2ZSBiZWVuIGFkZGVkIHRvIHRoZSBjYWNoZS5cbiAgICAgICAgICAgICAgICAvLyBJdCdzIHRoZSBwZXJmZWN0IHRpbWUgdG8gZGlzcGxheSBhIFwiTmV3IGNvbnRlbnQgaXNcbiAgICAgICAgICAgICAgICAvLyBhdmFpbGFibGU7IHBsZWFzZSByZWZyZXNoLlwiIG1lc3NhZ2UgaW4gdGhlIHBhZ2UncyBpbnRlcmZhY2UuXG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgY2FzZSAncmVkdW5kYW50JzpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBpbnN0YWxsaW5nICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc2VydmljZSB3b3JrZXIgYmVjYW1lIHJlZHVuZGFudC4nKTtcblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIC8vIElnbm9yZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSkuY2F0Y2goZnVuY3Rpb24oZSkge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZHVyaW5nIHNlcnZpY2Ugd29ya2VyIHJlZ2lzdHJhdGlvbjonLCBlKTtcbiAgICB9KTtcbiAgfVxuICAgIC8qIGVzbGludC1kaXNhYmxlICovXG4gICAgXG4gICAgY2xhc3MgQWRkRGlhbG9nIHtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0cnVjdG9yKHN0b3JhZ2UsIGNoYXJ0KXtcbiAgICAgICAgXG4gICAgICAgICAgICB0aGlzLl9zdG9yYWdlID0gc3RvcmFnZTtcbiAgICAgICAgICAgIHRoaXMuX2NoYXJ0ID0gY2hhcnQ7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMuX2RpYWxvZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGQtZGlhbG9nJyk7XG4gICAgICAgIFxuICAgICAgICAgICAgdGhpcy5faW5pdEJ1dHRvbnMoKTtcbiAgICAgICAgICAgIHRoaXMuX2luaXRUZW1wZXJhdHVyZUlucHV0KCk7XG4gICAgICAgICAgICB0aGlzLl9pbml0RGF0ZURpYWxvZygpO1xuICAgICAgICAgICAgdGhpcy5faW5pdFRpbWVEaWFsb2coKTtcbiAgICBcbiAgICAgICAgICAgIHRoaXMuX3Jlc2V0Rm9ybSgpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBzaG93KCl7XG4gICAgICAgICAgICB0aGlzLl9kaWFsb2cuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gICAgICAgICAgICB0aGlzLl9yZXNldEZvcm0oKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaGlkZSgpe1xuICAgICAgICAgICAgdGhpcy5fZGlhbG9nLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgICAgICAgICAgdGhpcy5fcmVzZXRGb3JtKCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIF9yZXNldEZvcm0oKXtcbiAgICAgICAgICAgIHRoaXMuX3NlbGVjdGVkRGF0ZSA9IHRoaXMuX3NlbGVjdGVkVGltZSA9IG1vbWVudCgpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB0aGlzLl9kYXRlTGFiZWwudGV4dENvbnRlbnQgPSB0aGlzLl9zZWxlY3RlZERhdGUuZm9ybWF0KCdERC5NTS5ZWVlZJyk7XG4gICAgICAgICAgICB0aGlzLl90aW1lTGFiZWwudGV4dENvbnRlbnQgPSB0aGlzLl9zZWxlY3RlZFRpbWUuZm9ybWF0KCdoOm1tJyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMuX3RlbXBlcmF0dXJlLnZhbHVlID0gMzYuNjtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgX2luaXRCdXR0b25zKCkge1xuICAgICAgICAgICAgY29uc3QgY2xvc2VCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2xvc2UnKTtcbiAgICAgICAgICAgIGNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PnRoaXMuX29uQ2xvc2UoKSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IGFwcGx5QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FwcGx5Jyk7XG4gICAgICAgICAgICBhcHBseUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT50aGlzLl9vbkFwcGx5KCkpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBfb25DbG9zZSgpe1xuICAgICAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIF9vbkFwcGx5KCl7XG5cbiAgICAgICAgICAgIGxldCB0ZW1wZXJhdHVyZSA9IHRoaXMuX2dldFRlbXBlcmF0dXJlKCk7XG4gICAgXG4gICAgICAgICAgICBpZiAoIXRlbXBlcmF0dXJlKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbGV0IHRpbWUgPSBtb21lbnQoKVxuICAgICAgICAgICAgICAgIC5zZXQoJ3llYXInLCB0aGlzLl9zZWxlY3RlZERhdGUuZ2V0KCd5ZWFyJykpXG4gICAgICAgICAgICAgICAgLnNldCgnbW9udGgnLCB0aGlzLl9zZWxlY3RlZERhdGUuZ2V0KCdtb250aCcpKVxuICAgICAgICAgICAgICAgIC5zZXQoJ2RhdGUnLCB0aGlzLl9zZWxlY3RlZERhdGUuZ2V0KCdkYXRlJykpXG4gICAgICAgICAgICAgICAgLnNldCgnaG91cicsIHRoaXMuX3NlbGVjdGVkVGltZS5nZXQoJ2hvdXInKSlcbiAgICAgICAgICAgICAgICAuc2V0KCdtaW51dGUnLCB0aGlzLl9zZWxlY3RlZFRpbWUuZ2V0KCdtaW51dGUnKSk7XG4gICAgXG4gICAgICAgICAgICBsZXQgZGF0YSA9IHtcbiAgICAgICAgICAgICAgICB0ZW1wZXJhdHVyZSA6IHRlbXBlcmF0dXJlLFxuICAgICAgICAgICAgICAgIHRpbWU6IHRpbWUuZm9ybWF0KClcbiAgICAgICAgICAgIH07XG4gICAgXG4gICAgICAgICAgICB0aGlzLl9zdG9yYWdlLnNhdmVSZWNvcmQoZGF0YSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IHJlY29yZHMgPSB0aGlzLl9zdG9yYWdlLmdldFJlY29yZHMoKTtcbiAgICAgICAgICAgIHRoaXMuX2NoYXJ0LmRyYXdDaGFydChyZWNvcmRzKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5oaWRlKCk7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgX2dldFRlbXBlcmF0dXJlKCl7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdGVtcGVyYXR1cmUudmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIF9pbml0VGVtcGVyYXR1cmVJbnB1dCgpe1xuICAgICAgICAgICAgdGhpcy5fdGVtcGVyYXR1cmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGVtcGVyYXR1cmUnKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgX2luaXREYXRlRGlhbG9nKCkge1xuICAgICAgICAgICAgY29uc3QgZGF0ZURpYWxvZyA9IG5ldyBtZERhdGVUaW1lUGlja2VyLmRlZmF1bHQoeyB0eXBlOiAnZGF0ZScgfSk7XG4gICAgICAgICAgICBjb25zdCBkYXRlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2RhdGUgYnV0dG9uJyk7XG4gICAgICAgICAgICBkYXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICBkYXRlRGlhbG9nLnRvZ2dsZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHRoaXMuX2RhdGVMYWJlbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNkYXRlIHNwYW4nKTtcbiAgICAgICAgICAgIGRhdGVEaWFsb2cudHJpZ2dlciA9IHRoaXMuX2RhdGVMYWJlbDtcbiAgICBcbiAgICAgICAgICAgIHRoaXMuX2RhdGVMYWJlbC5hZGRFdmVudExpc3RlbmVyKCdvbk9rJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuX2RhdGVMYWJlbC50ZXh0Q29udGVudCA9IGRhdGVEaWFsb2cudGltZS5mb3JtYXQoJ0RELk1NLllZWVknKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9zZWxlY3RlZERhdGUgPSBkYXRlRGlhbG9nLnRpbWU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgX2luaXRUaW1lRGlhbG9nKCkge1xuICAgICAgICAgICAgY29uc3QgdGltZURpYWxvZyA9IG5ldyBtZERhdGVUaW1lUGlja2VyLmRlZmF1bHQoeyB0eXBlOiAndGltZScgfSk7XG4gICAgICAgICAgICBjb25zdCB0aW1lQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RpbWUgYnV0dG9uJyk7XG4gICAgICAgICAgICB0aW1lQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHRpbWVEaWFsb2cudG9nZ2xlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5fdGltZUxhYmVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RpbWUgc3BhbicpO1xuICAgICAgICAgICAgdGltZURpYWxvZy50cmlnZ2VyID0gdGhpcy5fdGltZUxhYmVsO1xuICAgICAgICAgICAgdGhpcy5fdGltZUxhYmVsLmFkZEV2ZW50TGlzdGVuZXIoJ29uT2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdGltZUxhYmVsLnRleHRDb250ZW50ID0gdGltZURpYWxvZy50aW1lLmZvcm1hdCgnaDptbScpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3NlbGVjdGVkVGltZSA9IHRpbWVEaWFsb2cudGltZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGNsYXNzIFN0b3JhZ2Uge1xuICAgICAgICBcbiAgICAgICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgICAgIHRoaXMuX2tleSA9ICdkYXRhJztcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgZ2V0UmVjb3JkcygpIHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0odGhpcy5fa2V5KTtcbiAgICBcbiAgICAgICAgICAgIGxldCByZWNvcmRzID0gW107XG4gICAgXG4gICAgICAgICAgICBpZiAoZGF0YSlcbiAgICAgICAgICAgICAgICByZWNvcmRzID0gSlNPTi5wYXJzZShkYXRhKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHJlY29yZHM7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHNhdmVSZWNvcmQocmVjb3JkKXtcbiAgICAgICAgICAgIGNvbnN0IHJlY29yZHMgPSB0aGlzLmdldFJlY29yZHMoKTtcbiAgICAgICAgICAgIHJlY29yZHMucHVzaChyZWNvcmQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5fa2V5LCBKU09OLnN0cmluZ2lmeShyZWNvcmRzKSk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGNsZWFyKCl7XG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5fa2V5KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBjbGFzcyBDaGFydENvbXBvbmVudCB7XG4gICAgICAgIGNvbnN0cnVjdG9yKHN0b3JhZ2UpIHtcblxuICAgICAgICAgICAgdGhpcy5fY3R4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RlbXBlcmF0dXJlLWNoYXJ0Jyk7XG4gICAgICAgICAgICBjb25zdCByZWNvcmRzID0gc3RvcmFnZS5nZXRSZWNvcmRzKCk7XG4gICAgICAgICAgICB0aGlzLmRyYXdDaGFydChyZWNvcmRzKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgZHJhd0NoYXJ0KHJlY29yZHMpe1xuICAgIFxuICAgICAgICAgICAgbGV0IGRhdGEgPSByZWNvcmRzXG4gICAgICAgICAgICAubWFwKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7IHk6IGl0ZW0udGVtcGVyYXR1cmUsIHg6IGl0ZW0udGltZSB9O1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5zb3J0KChpdGVtMSwgaXRlbTIpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbTEueCA+IGl0ZW0yLngpIHJldHVybiAxO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtMS54IDwgaXRlbTIueCkgcmV0dXJuIC0xO1xuICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgfSk7XG4gICAgXG4gICAgICAgICAgICB0aGlzLl9jaGFydCA9IG5ldyBDaGFydCh0aGlzLl9jdHgsIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnbGluZScsXG4gICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICBkYXRhc2V0czogW3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1YmljSW50ZXJwb2xhdGlvbk1vZGU6ICdtb25vdG9uZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogJ3JnYigyNTUsIDEyNiwgNzApJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50Qm9yZGVyQ29sb3I6ICdyZ2IoMjU1LDIxNSw2NCknLFxuICAgICAgICAgICAgICAgICAgICB9XVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIG1haW50YWluQXNwZWN0UmF0aW86IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBzY2FsZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHhBeGVzOiBbe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICd0aW1lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlGb3JtYXRzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWFydGVyOiAnTU1NIFlZWVkgaGg6bW0nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHlBeGVzOiBbe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpY2tzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heDogNDIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogMzVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgaW5pdCgpO1xuICAgIFxuICAgIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgICAgIFxuICAgICAgICBjb25zdCBzdG9yYWdlID0gbmV3IFN0b3JhZ2UoKTtcbiAgICAgICAgY29uc3QgY2hhcnQgPSBuZXcgQ2hhcnRDb21wb25lbnQoc3RvcmFnZSk7XG4gICAgICAgIGNvbnN0IGFkZERpYWxvZyA9IG5ldyBBZGREaWFsb2coc3RvcmFnZSwgY2hhcnQpO1xuICAgICAgICBcbiAgICAgICAgY29uc3Qgc2hvd0RpYWxvZ0J1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhZGQnKTtcbiAgICAgICAgc2hvd0RpYWxvZ0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGFkZERpYWxvZy5zaG93KCk7XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgY2xlYXJCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2xlYXItYnV0dG9uJyk7XG4gICAgICAgIGNsZWFyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgc3RvcmFnZS5jbGVhcigpO1xuICAgICAgICAgICAgY2hhcnQuZHJhd0NoYXJ0KFtdKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyogZXNsaW50LWVuYWJsZSAqL1xufSkoKTtcbiJdfQ==\n","/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n    /* eslint-disable */\n    \n    class AddDialog {\n        \n        constructor(storage, chart){\n        \n            this._storage = storage;\n            this._chart = chart;\n            \n            this._dialog = document.getElementById('add-dialog');\n        \n            this._initButtons();\n            this._initTemperatureInput();\n            this._initDateDialog();\n            this._initTimeDialog();\n    \n            this._resetForm();\n        }\n        \n        show(){\n            this._dialog.classList.remove('hidden');\n            this._resetForm();\n        }\n        \n        hide(){\n            this._dialog.classList.add('hidden');\n            this._resetForm();\n        }\n        \n        _resetForm(){\n            this._selectedDate = this._selectedTime = moment();\n            \n            this._dateLabel.textContent = this._selectedDate.format('DD.MM.YYYY');\n            this._timeLabel.textContent = this._selectedTime.format('h:mm');\n            \n            this._temperature.value = 36.6;\n        }\n        \n        _initButtons() {\n            const closeButton = document.getElementById('close');\n            closeButton.addEventListener('click', ()=>this._onClose());\n            \n            const applyButton = document.getElementById('apply');\n            applyButton.addEventListener('click', ()=>this._onApply());\n        }\n        \n        _onClose(){\n            this.hide();\n        }\n        \n        _onApply(){\n\n            let temperature = this._getTemperature();\n    \n            if (!temperature)\n                return;\n            \n            let time = moment()\n                .set('year', this._selectedDate.get('year'))\n                .set('month', this._selectedDate.get('month'))\n                .set('date', this._selectedDate.get('date'))\n                .set('hour', this._selectedTime.get('hour'))\n                .set('minute', this._selectedTime.get('minute'));\n    \n            let data = {\n                temperature : temperature,\n                time: time.format()\n            };\n    \n            this._storage.saveRecord(data);\n            \n            const records = this._storage.getRecords();\n            this._chart.drawChart(records);\n            \n            this.hide();\n        }\n    \n        _getTemperature(){\n            return this._temperature.value;\n        }\n        \n        _initTemperatureInput(){\n            this._temperature = document.getElementById('temperature');\n        }\n        \n        _initDateDialog() {\n            const dateDialog = new mdDateTimePicker.default({ type: 'date' });\n            const dateButton = document.querySelector('#date button');\n            dateButton.addEventListener('click', function(){\n                dateDialog.toggle();\n            });\n            \n            this._dateLabel = document.querySelector('#date span');\n            dateDialog.trigger = this._dateLabel;\n    \n            this._dateLabel.addEventListener('onOk', () => {\n                this._dateLabel.textContent = dateDialog.time.format('DD.MM.YYYY');\n                this._selectedDate = dateDialog.time;\n            });\n        }\n        \n        _initTimeDialog() {\n            const timeDialog = new mdDateTimePicker.default({ type: 'time' });\n            const timeButton = document.querySelector('#time button');\n            timeButton.addEventListener('click', function () {\n                timeDialog.toggle();\n            });\n            \n            this._timeLabel = document.querySelector('#time span');\n            timeDialog.trigger = this._timeLabel;\n            this._timeLabel.addEventListener('onOk', () => {\n                this._timeLabel.textContent = timeDialog.time.format('h:mm');\n                this._selectedTime = timeDialog.time;\n            });\n        }\n    }\n    \n    class Storage {\n        \n        constructor(){\n            this._key = 'data';\n        }\n        \n        getRecords() {\n            const data = window.localStorage.getItem(this._key);\n    \n            let records = [];\n    \n            if (data)\n                records = JSON.parse(data);\n            \n            return records;\n        }\n        \n        saveRecord(record){\n            const records = this.getRecords();\n            records.push(record);\n            \n            window.localStorage.setItem(this._key, JSON.stringify(records));\n        }\n        \n        clear(){\n            window.localStorage.removeItem(this._key);\n        }\n    }\n    \n    class ChartComponent {\n        constructor(storage) {\n\n            this._ctx = document.getElementById('temperature-chart');\n            const records = storage.getRecords();\n            this.drawChart(records);\n        }\n        \n        drawChart(records){\n    \n            let data = records\n            .map(item => {\n                return { y: item.temperature, x: item.time };\n            })\n            .sort((item1, item2) => {\n                if (item1.x > item2.x) return 1;\n                if (item1.x < item2.x) return -1;\n                return 0;\n            });\n    \n            this._chart = new Chart(this._ctx, {\n                type: 'line',\n                data: {\n                    datasets: [{\n                        data: data,\n                        fill: false,\n                        cubicInterpolationMode: 'monotone',\n                        borderColor: 'rgb(255, 126, 70)',\n                        pointBorderColor: 'rgb(255,215,64)',\n                    }]\n                },\n                options: {\n                    legend: {\n                        display: false\n                    },\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        xAxes: [{\n                            type: 'time',\n                            time: {\n                                displayFormats: {\n                                    quarter: 'MMM YYYY hh:mm'\n                                }\n                            }\n                        }],\n                        yAxes: [{\n                            ticks: {\n                                max: 42,\n                                min: 35\n                            }\n                        }]\n                    }\n                }\n            });\n        }\n    }\n    \n    init();\n    \n    function init() {\n        \n        const storage = new Storage();\n        const chart = new ChartComponent(storage);\n        const addDialog = new AddDialog(storage, chart);\n        \n        const showDialogButton = document.getElementById('add');\n        showDialogButton.addEventListener('click', () => {\n            addDialog.show();\n        });\n        \n        const clearButton = document.getElementById('clear-button');\n        clearButton.addEventListener('click', () => {\n            storage.clear();\n            chart.drawChart([]);\n        });\n    }\n\n    /* eslint-enable */\n})();\n"]}